{
  "codes": {
    "ABINIT": {
      "categories": [
        "ab-initio_engines",
        "dmft"
      ],
      "metadata": {
        "description": "ABINIT is a software suite to calculate the optical, mechanical, vibrational, and other observable properties of materials. Starting from the quantum equations of density functional theory, you can build up to advanced applications with perturbation theories based on DFT, and many-body Green's functions (GW and DMFT).\n",
        "sourcecode_url": "https://github.com/abinit/abinit",
        "homepage_url": "https://www.abinit.org",
        "title": "ABINIT",
        "logo": "https://www.abinit.org/themes/abinit/logo-abinit-2015.svg"
      },
      "subpage": "codes/ABINIT.html"
    },
    "EPIq": {
      "categories": [
        "elph",
        "transport",
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "EPIq is an open-source software for the calculation of electron-phonon coupling related properties.\n",
        "title": "EPIq",
        "homepage_url": "https://the-epiq-team.gitlab.io/epiq-site",
        "documentation_url": "https://the-epiq-team.gitlab.io/epiq-site",
        "sourcecode_url": "https://gitlab.com/the-epiq-team/epiq",
        "logo": "https://the-epiq-team.gitlab.io/epiq-site/assets/images/logo_black_200.png"
      },
      "subpage": "codes/EPIq.html"
    },
    "EPW": {
      "categories": [
        "elph",
        "transport",
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "EPW is an open-source community code for ab initio calculations of electron-phonon interactions using Density-Functional Perturbation Theory and Maximally Localized Wannier Functions.\n",
        "title": "EPW",
        "homepage_url": "https://epw-code.org",
        "documentation_url": "https://docs.epw-code.org/doc/Documentation.html",
        "sourcecode_url": "https://gitlab.com/QEF/q-e/-/tree/develop/EPW",
        "logo": "https://epw-code.org/assets/img/epw_logo.png"
      },
      "subpage": "codes/EPW.html"
    },
    "FLEUR": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "The FLEUR project provides a simulation tool for materials properties using density functional theory and related methods.\n",
        "title": "FLEUR",
        "homepage_url": "https://www.flapw.de/MaX-7.0/",
        "documentation_url": "https://www.flapw.de/MaX-7.0/documentation/",
        "sourcecode_url": "https://iffgit.fz-juelich.de/fleur/fleur",
        "logo": "https://iffgit.fz-juelich.de/uploads/-/system/project/avatar/19/fleur__1_.gif?width=96"
      },
      "subpage": "codes/FLEUR.html"
    },
    "GPAW": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "GPAW is a density-functional theory (DFT) Python code based on the projector-augmented wave (PAW) method and the atomic simulation environment (ASE).\n",
        "title": "GPAW",
        "homepage_url": "https://wiki.fysik.dtu.dk/gpaw/",
        "documentation_url": "https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html",
        "sourcecode_url": "https://gitlab.com/gpaw/gpaw",
        "logo": "https://gitlab.com/uploads/-/system/project/avatar/875951/gpaw-logo.png?width=96"
      },
      "subpage": "codes/GPAW.html"
    },
    "Perturbo": {
      "categories": [
        "elph",
        "transport",
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "PERTURBO is open source software to compute from first principles the scattering processes between charge carriers (electrons and holes) and phonons, defects, and photons in solid state materials, including metals, semiconductors, oxides, and insulators.\n",
        "title": "Perturbo",
        "homepage_url": "https://perturbo-code.github.io",
        "documentation_url": "https://perturbo-code.github.io",
        "logo": "https://perturbo-code.github.io/images/PERTURBO_logo_site.svg"
      },
      "subpage": "codes/Perturbo.html"
    },
    "Phoebe": {
      "categories": [
        "elph",
        "transport",
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "Phoebe is an open-source code for the ab-initio computation of electron and phonon transport properties of crystalline materials.\n",
        "title": "Phoebe",
        "homepage_url": "https://mir-group.github.io/phoebe/index",
        "documentation_url": "https://mir-group.github.io/phoebe/index",
        "sourcecode_url": "https://github.com/mir-group/phoebe",
        "logo": "https://github.com/mir-group/phoebe/blob/develop/doc/sphinx/source/_static/icon.png?raw=true"
      },
      "subpage": "codes/Phoebe.html"
    },
    "QuantumESPRESSO": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "Quantum ESPRESSO is an integrated suite of open-source computer codes for quantum simulations of materials using state-of-the art electronic-structure techniques, based on density-functional theory, density-functional perturbation theory, and many-body perturbation theory, within the plane-wave pseudo-potential and projector-augmented-wave approaches\n",
        "homepage_url": "https://www.quantum-espresso.org",
        "sourcecode_url": "https://gitlab.com/QEF/q-e",
        "documentation_url": "https://www.quantum-espresso.org/documentation/",
        "title": "Quantum ESPRESSO",
        "logo": "https://www.quantum-espresso.org/wp-content/uploads/2022/03/quantum_ogo_ok.png"
      },
      "subpage": "codes/QuantumESPRESSO.html"
    },
    "SIESTA": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "SIESTA is both a method and its computer program implementation, to perform efficient electronic structure calculations and ab initio molecular dynamics simulations of molecules and solids. SIESTA's efficiency stems from the use of a basis set of strictly-localized atomic orbitals. A very important feature of the code is that its accuracy and cost can be tuned in a wide range, from quick exploratory calculations to highly accurate simulations matching the quality of other approaches, such as plane-wave methods.\n",
        "title": "SIESTA",
        "homepage_url": "https://siesta-project.org/siesta/",
        "documentation_url": "https://siesta-project.org/siesta/Documentation/index.html",
        "sourcecode_url": "https://gitlab.com/siesta-project/siesta",
        "logo": "https://gitlab.com/uploads/-/system/project/avatar/10326616/SIESTA-logo-233x125.png?width=96"
      },
      "subpage": "codes/SIESTA.html"
    },
    "VASP": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "The Vienna Ab initio Simulation Package (VASP) is a computer program for atomic scale materials modelling, e.g. electronic structure calculations and quantum-mechanical molecular dynamics, from first principles.\n",
        "homepage_url": "https://www.vasp.at",
        "documentation_url": "https://www.vasp.at/wiki/index.php/LWANNIER90",
        "title": "VASP",
        "logo": "https://www.vasp.at/wiki/images/vasp_logo_alpha.png"
      },
      "subpage": "codes/VASP.html"
    },
    "WIEN2k": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "ABINIT is a software suite to calculate the optical, mechanical, vibrational, and other observable properties of materials. Starting from the quantum equations of density functional theory, you can build up to advanced applications with perturbation theories based on DFT, and many-body Green's functions (GW and DMFT).\n",
        "homepage_url": "http://susi.theochem.tuwien.ac.at",
        "title": "WIEN2k",
        "logo": "http://susi.theochem.tuwien.ac.at/img/wien2k_logo_3.gif"
      },
      "subpage": "codes/WIEN2k.html"
    },
    "WannierIOjl": {
      "categories": [
        "io-auto"
      ],
      "metadata": {
        "description": "A Julia package for reading/writing wannier90 file formats.\n",
        "title": "WannierIO.jl",
        "homepage_url": "https://io.wannierjl.org/",
        "documentation_url": "https://io.wannierjl.org/",
        "sourcecode_url": "https://github.com/qiaojunfeng/WannierIO.jl",
        "logo": "None"
      },
      "subpage": "codes/WannierIOjl.html"
    },
    "Wannierjl": {
      "categories": [
        "wannier_engines",
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "A Julia package for Wannierization and Wannier interpolations.\n",
        "title": "Wannier.jl",
        "homepage_url": "https://wannierjl.org/",
        "documentation_url": "https://wannierjl.org/",
        "sourcecode_url": "https://github.com/qiaojunfeng/Wannier.jl",
        "logo": "None"
      },
      "subpage": "codes/Wannierjl.html"
    },
    "YAMBO": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "A FORTRAN/C code for Many-Body calculations in solid state and molecular physics.\n",
        "title": "Yambo",
        "homepage_url": "https://www.yambo-code.eu",
        "documentation_url": "https://www.yambo-code.eu/wiki/index.php/Main_Page",
        "sourcecode_url": "https://github.com/yambo-code/yambo.git",
        "logo": "https://fresh.yambo-code.eu/wp-content/uploads/2023/02/yambo_logo_overlay.svg"
      },
      "subpage": "codes/YAMBO.html"
    },
    "elk": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "An all-electron full-potential linearised augmented-plane wave (LAPW) code with many advanced features\n",
        "title": "Elk",
        "homepage_url": "https://elk.sourceforge.io",
        "documentation_url": "https://elk.sourceforge.io/#documentation",
        "sourcecode_url": "https://elk.sourceforge.io/#download",
        "logo": "https://scc.dipc.org/docs/software/applications/elk/images/elk-logo.jpeg"
      },
      "subpage": "codes/elk.html"
    },
    "elphbolt": {
      "categories": [
        "elph",
        "transport",
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "elphbolt (short for electron-phonon Boltzmann transport) is a modern Fortran (2018 standard) suite of transport codes. It provides a solver for both the coupled and decoupled electron and phonon Boltzmann transport equations (BTEs)\n",
        "title": "elphbolt",
        "homepage_url": "https://github.com/nakib/elphbolt",
        "documentation_url": "https://github.com/nakib/elphbolt",
        "sourcecode_url": "https://github.com/nakib/elphbolt",
        "logo": "https://github.com/nakib/elphbolt/raw/develop/logo/logo.png"
      },
      "subpage": "codes/elphbolt.html"
    },
    "linres": {
      "categories": [
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "Code for calculating linear response properties based on tight-binding Hamiltonians. It is mainly used with tight-binding Hamiltonians obtained from wannier90 or from the FPLO DFT code but any tight-binding can be used. A python program for generating sd models that is also interfaced to the linear response code is also included. The code utilizes Kubo formula with constant Gamma approximation to calculate conductivity and the anomalous Hall effect, spin Hall effect and the current induced spin-polarization, which gives rise to the spin-orbit torque. Other response quantities can be easily implemented.\n",
        "sourcecode_url": "https://bitbucket.org/zeleznyj/wannier-linear-response/src/master/",
        "homepage_url": "https://bitbucket.org/zeleznyj/wannier-linear-response/wiki/Home",
        "documentation_url": "https://bitbucket.org/zeleznyj/wannier-linear-response/wiki/Home",
        "title": "linres",
        "logo": "None"
      },
      "subpage": "codes/linres.html"
    },
    "openMX": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "OpenMX (Open source package for Material eXplorer) is a software package for  nano-scale material simulations based on density functional theories (DFT),  norm-conserving pseudopotentials, and pseudo-atomic localized basis functions. The  methods and algorithms used in OpenMX and their implementation are carefully designed  for the realization of large-scale ab initio electronic structure calculations on  parallel computers based on the MPI or MPI/OpenMP hybrid parallelism. The efficient  implementation of DFT enables us to investigate electronic, magnetic, and geometrical  structures of a wide variety of materials such as bulk materials, surfaces,  interfaces, liquids, and low-dimensional materials. Systems consisting of 1000 atoms can be treated using the conventional diagonalization method if several hundreds  cores on a parallel computer are used.\n",
        "title": "openMX",
        "homepage_url": "https://www.openmx-square.org",
        "documentation_url": "https://www.openmx-square.org/openmx_man3.9/index.html",
        "sourcecode_url": "https://www.openmx-square.org/download.html",
        "logo": "https://www.openmx-square.org/OpenMX_LOGO_S.PNG"
      },
      "subpage": "codes/openMX.html"
    },
    "pySCF": {
      "categories": [
        "ab-initio_engines"
      ],
      "metadata": {
        "description": "The Python-based Simulations of Chemistry Framework (PySCF) is an open-source collection of electronic structure modules powered by Python. The package provides a simple, lightweight, and efficient platform for quantum chemistry calculations and methodology development. PySCF can be used to simulate the properties of molecules, crystals, and custom Hamiltonians using mean-field and post-mean-field methods. To ensure ease of extensibility, almost all of the features in PySCF are implemented in Python, while computationally critical parts are implemented and optimized in C.\n",
        "title": "pySCF",
        "homepage_url": "https://pyscf.org",
        "documentation_url": "https://pyscf.org/user.html",
        "sourcecode_url": "https://github.com/pyscf/pyscf",
        "logo": "https://pyscf.org/_images/pyscf-logo.png"
      },
      "subpage": "codes/pySCF.html"
    },
    "pythtb": {
      "categories": [
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "Simple solver for tight binding models for use in condensed matter physics and materials science.\n",
        "title": "PythTB",
        "homepage_url": "https://www.physics.rutgers.edu/pythtb/",
        "documentation_url": "https://www.physics.rutgers.edu/pythtb/usage.html#pythtb.w90",
        "sourcecode_url": "https://pypi.org/project/pythtb/",
        "logo": "https://www.physics.rutgers.edu/pythtb/_images/graphene.png"
      },
      "subpage": "codes/pythtb.html"
    },
    "strawberrypy": {
      "categories": [
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "StraWBerryPy (Single-poinT and local invaRiAnts for Wannier Berriologies in Python) is a Python package to calculate topological invariants and quantum-geometrical quantities in non-crystalline topological insulators.\n",
        "sourcecode_url": "https://github.com/strawberrypy-developers/strawberrypy",
        "documentation_url": "https://strawberrypy.readthedocs.io/en/latest/",
        "homepage_url": "https://strawberrypy.readthedocs.io",
        "title": "StraWBerryPy",
        "logo": "https://strawberrypy.readthedocs.io/en/latest/_static/logo.png"
      },
      "subpage": "codes/strawberrypy.html"
    },
    "tbmodels": {
      "categories": [
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "Bmodels is a Python package for evaluating tight-binding models. It features methods for reading and writing tight-binding models to various formats, and evaluating the Hamiltonian and eigenvalues of the system. It is considerably faster than comparable packages, enabling it to handle first-principles derived tight-binding models.\n",
        "title": "TBmodels",
        "homepage_url": "https://tbmodels.greschd.ch",
        "sourcecode_url": "https://github.com/Z2PackDev/TBmodels",
        "documentation_url": "https://tbmodels.greschd.ch/en/latest/tutorial.html#id3",
        "logo": "https://tbmodels.greschd.ch/en/latest/_images/tbmodels_logo.jpg"
      },
      "subpage": "codes/tbmodels.html"
    },
    "wannierberri": {
      "categories": [
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "A code to calculate different properties by means of Wannier interpolation: Berry curvature, orbital moment and derived properties.\n",
        "sourcecode_url": "https://github.com/wannier-berri/wannier-berri",
        "homepage_url": "https://wannier-berri.org",
        "documentation_url": "https://docs.wannier-berri.org/en/master/docs/system.html#id3",
        "title": "Wannier Berri",
        "logo": "https://docs.wannier-berri.org/en/master/_static/Book.png"
      },
      "subpage": "codes/wannierberri.html"
    },
    "wanniertools": {
      "categories": [
        "tb",
        "berry"
      ],
      "metadata": {
        "description": "An open-source software package for novel topological materials.\n",
        "title": "WannierTools",
        "sourcecode_url": "https://github.com/quanshengwu/wannier_tools",
        "homepage_url": "http://www.wanniertools.com/",
        "documentation_url": "http://www.wanniertools.com/",
        "logo": "https://github.com/quanshengwu/wannier_tools/raw/master/wt-logo.jpg"
      },
      "subpage": "codes/wanniertools.html"
    },
    "z2pack": {
      "categories": [
        "berry"
      ],
      "metadata": {
        "description": "Z2Pack automates the calculation of topological numbers of band-structures. It works with first-principles calculations (z2pack.fp), tight-binding models (z2pack.tb) and explicit Hamiltonian matrices (z2pack.hm).\n",
        "homepage_url": "https://z2pack.greschd.ch/",
        "sourcecode_url": "https://github.com/Z2PackDev/Z2Pack",
        "documentation_url": "https://z2pack.greschd.ch/",
        "title": "Z2Pack",
        "logo": "https://z2pack.greschd.ch/en/latest/_static/z2_logo_150.png"
      },
      "subpage": "codes/z2pack.html"
    }
  },
  "categories": {
    "wannier_engines": {
      "description": "Codes to obtain Wannier functions",
      "title": "Wannier engines"
    },
    "ab-initio_engines": {
      "description": "First-principles simulation codes",
      "title": "Ab initio engines"
    },
    "tb": {
      "description": "Tight-binding codes",
      "title": "Tight-binding"
    },
    "berry": {
      "description": "Codes to calculate quantum-geometrical and topological properties of the electronic structure",
      "title": "Berryology and topology"
    },
    "elph": {
      "description": "Codes to calculate properties related to electron-phonon coupling, such as electronic mobilites and superconducting critical temperatures",
      "title": "Electron-phonon coupling"
    },
    "dmft": {
      "description": "Codes to perform simulation within dynamical mean-field theory (DMFT)",
      "title": "Dynamical mean-field theory"
    },
    "io-auto": {
      "description": "Codes and automation platforms for automation, high-throughput computing, I/O generation and parsing.",
      "title": "I/O and automation"
    },
    "transport": {
      "description": "Codes to perform calculations of electronic transport",
      "title": "Transport"
    }
  }
}